# Deployment for API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  replicas: 1  # Number of replicas for the API
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: simple-api:latest  # Replace with your image name if using cloud registry
        imagePullPolicy: IfNotPresent  # Ensures the image is pulled only if not present
        ports:
        - containerPort: 5000

---
# Service for API
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 80  # Port exposed by the service
      targetPort: 5000  # Port where the API is running inside the container
  type: ClusterIP  # Only accessible within the cluster

---
# Deployment for Webapp
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
spec:
  replicas: 1  # Number of replicas for the webapp
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: static-webapp:latest  # Replace with your image name if using cloud registry
        imagePullPolicy: IfNotPresent  # Ensures the image is pulled only if not present
        ports:
        - containerPort: 80

---
# Service for Webapp
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 80  # Port exposed by the service
      targetPort: 80  # Port where the webapp is running inside the container
  type: LoadBalancer  # Exposes the service publicly (for cloud or Docker Desktop with LoadBalancer)
